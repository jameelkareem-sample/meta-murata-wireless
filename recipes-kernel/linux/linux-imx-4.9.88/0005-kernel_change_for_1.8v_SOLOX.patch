diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index d2eb755..8dde1a7 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -1965,7 +1965,13 @@ void mmc_power_up(struct mmc_host *host, u32 ocr)
 	mmc_set_initial_state(host);
 
 	/* Try to set signal voltage to 3.3V but fall back to 1.8v or 1.2v */
-	if (!mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_330))
+	/* Murata mod for SD3 on SoloX or SD1 on UL(L) */
+	if (host->index == 2)  /* index = 0 for UL(L) or 2 for SoloX */
+		{
+		mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180);
+		pr_err("Murata: mmc_power_up: Setting 1.8V for Index: %d\n",host->index);
+		}
+	else if (!mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_330))
 		dev_dbg(mmc_dev(host), "Initial signal voltage of 3.3v\n");
 	else if (!mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180))
 		dev_dbg(mmc_dev(host), "Initial signal voltage of 1.8v\n");
diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
index f106dd0..bb39352 100644
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -643,7 +643,16 @@ static int mmc_sdio_init_card(struct mmc_host *host, u32 ocr,
 	 * to make sure which speed mode should work.
 	 */
 	if (!powered_resume && (rocr & ocr & R4_18V_PRESENT)) {
-		err = mmc_set_uhs_voltage(host, ocr_card);
+		/* Murata fix for 1.8V fixed signaling on SoloX - SD3 slot  or UL(L) - SD1 slot */
+		if (host->index == 2)  /* SoloX == 2; UL(L) == 0 */
+			{
+			pr_err("Murata: mmc_sdio_init_card: Skipping 1.8V setting for Index: %d\n",host->index); 
+			err = 0; 
+		}
+		else	
+			{
+			err = err = mmc_set_uhs_voltage(host, ocr_card);
+			}
 		if (err == -EAGAIN) {
 			mmc_sdio_resend_if_cond(host, card);
 			retries--;
