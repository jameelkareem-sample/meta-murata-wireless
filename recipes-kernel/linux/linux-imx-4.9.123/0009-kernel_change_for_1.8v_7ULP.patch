diff --git a/drivers/mmc/core/core.c b/drivers/mmc/core/core.c
index a443930..d2678f4 100644
--- a/drivers/mmc/core/core.c
+++ b/drivers/mmc/core/core.c
@@ -1823,7 +1823,14 @@ void mmc_power_up(struct mmc_host *host, u32 ocr)
 	mmc_set_initial_state(host);
 
 	/* Try to set signal voltage to 3.3V but fall back to 1.8v or 1.2v */
-	if (__mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_330) == 0)
+
+	/* Murata mod for SD3 on 6SoloX; or SD1 on 6UL(L); or SD1 on 7ULP */
+	if (host->index == 1)  /* index = 0 for 6UL(L); 2 for 6SoloX; or 1 for 7ULP */
+		{
+		__mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180);
+		pr_err("Murata: mmc_power_up: Setting 1.8V for Index: %d\n",host->index);
+		}
+	else if (__mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_330) == 0)
 		dev_dbg(mmc_dev(host), "Initial signal voltage of 3.3v\n");
 	else if (__mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180) == 0)
 		dev_dbg(mmc_dev(host), "Initial signal voltage of 1.8v\n");
diff --git a/drivers/mmc/core/sdio.c b/drivers/mmc/core/sdio.c
index 9e4951f..d9c9bd1 100644
--- a/drivers/mmc/core/sdio.c
+++ b/drivers/mmc/core/sdio.c
@@ -627,8 +627,17 @@ static int mmc_sdio_init_card(struct mmc_host *host, u32 ocr,
 	 * it.
 	 */
 	if (!powered_resume && (rocr & ocr & R4_18V_PRESENT)) {
-		err = mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180,
+		/* Murata fix for 1.8V fixed signaling on 6SoloX - SD3 slot; 6UL(L) - SD1 slot; or 7ULP - SD1 slot */
+		if (host->index == 1)  /* 6SoloX == 2; 6UL(L) == 0; 7ULP == 1 */
+			{
+			pr_err("Murata: mmc_sdio_init_card: Skipping 1.8V setting for Index: %d\n",host->index); 
+			err = 0; 
+			}
+		else	
+			{
+			err = mmc_set_signal_voltage(host, MMC_SIGNAL_VOLTAGE_180,
 					ocr_card);
+			}
 		if (err == -EAGAIN) {
 			sdio_reset(host);
 			mmc_go_idle(host);
